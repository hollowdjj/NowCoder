package jz

/*
  每年六一儿童节，牛客都会准备一些小礼物和小游戏去看望孤儿院的孩子们。其中，有个游戏是这样的：
首先，让 n 个小朋友们围成一个大圈，小朋友们的编号是0~n-1。然后，随机指定一个数 m ，让编号为0
的小朋友开始报数。每次喊到 m-1 的那个小朋友要出列唱首歌，然后可以在礼品箱中任意的挑选礼物，并
且不再回到圈中，从他的下一个小朋友开始，继续0... m-1报数....这样下去....直到剩下最后一个小朋
友，可以不用表演，并且拿到牛客礼品，请你试着想下，哪个小朋友会得到这份礼品呢？
*/

func LastRemaining(n int, m int) int {
	//第一个出列的编号为m%n，此时还剩下n-1个人。假设这n-1个人中，最后剩下的人的编号为x
	//即f(n-1)的解为x。x在n个人中的编号为(m%n+x)%n = (m+x)%n。因此，可以得到状态转移方程：
	//f(n) = (m+f(n-1))%n
	prev := 0
	curr := 0
	for i := 1; i <= n; i++ {
		curr = (m + prev) % i
		prev = curr
	}
	return curr
}
