package others

/*
孩子们的游戏(圆圈中最后剩下的数)

每年六一儿童节，牛客都会准备一些小礼物和小游戏去看望孤儿院的孩子们。其中，有个游戏是这样的：
首先，让 n 个小朋友们围成一个大圈，小朋友们的编号是0~n-1。然后，随机指定一个数m ，让编号为0的小朋友从0开始报数。
每次喊到m-1的那个小朋友要出列唱首歌，然后可以在礼品箱中任意的挑选礼物，并且不再回到圈中，从他的下一个小朋
友开始，继续0... m-1报数....这样下去....直到剩下最后一个小朋友，可以不用表演，并且拿到牛客礼品，请你试着想下，哪
个小朋友会得到这份礼品呢？
*/

func LastRemainingSolution(n int, m int) int {
	//其实就是一个约瑟夫环问题。设f(n,m)表示有n个人并指定数m，最后剩下的人的序号
	//第一个出列的人的序号为m%n，此时我们递归求解子问题f(n-1,m)。假设f(n-1,m)的解
	//为x，那么f(n,m)最后剩下的人的序号就是从m%n开始往后数x个，即(m%n+x)%n=(m+x)%n
	//因此，可以使用动态规划求解，状态转移方程为：dp[i] = (m+dp[i-1])%i
	dp := make([]int, n+1)
	dp[1] = 0 //只有1个人，那么最后剩下的人就是他，序号为0
	for i := 1; i <= n; i++ {
		dp[i] = (m + dp[i-1]) % i
	}
	return dp[n]
}
