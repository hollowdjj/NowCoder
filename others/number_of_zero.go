package others

/*
阶乘末尾0的数量

给定一个非负整数 n ，返回 n! 结果的末尾为 0 的数量。
*/

func MaxNumberOfZero(n int64) int64 {
	//2的倍数乘以5才能导致末尾出现0。以10为例：
	//10!=1*2*3*4*5*6*7*8*9*10=1*(2*5)*3*4*3*7*8*9*(2*5)
	//显然2的个数是一定多于5的个数的，因此我们只需要找到0到n的所有数字一共可以分解出多少个5出来。
	//n/5表示0到n中有多少个5的倍数，n/25表示n中有多少个25的倍数。以25为例，0到25有5个5的倍数
	//分别是5,10,15,20,25。也就是说目前至少可以分解出5个5出来。但25是25的倍数，所以它还可以分出
	//1个5。所以25一共可以分出25/5+25/25个5出来
	var res int64 = 0
	var k int64 = 5
	for n >= k {
		res += n / k
		k *= 5
	}
	return res
}
